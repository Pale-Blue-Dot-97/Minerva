---
#       *       *    __  ________   ____________ _    _____
#   *        *      /  |/  /  _/ | / / ____/ __ \ |  / /   |  *           *
#       *          / /|_/ // //  |/ / __/ / /_/ / | / / /| |     *
#   *       *     / /  / // // /|  / /___/ _, _/| |/ / ___ |               *
#    *           /_/  /_/___/_/ |_/_____/_/ |_| |___/_/  |_|     *   *
#
#                          EXAMPLE MASTER CONFIG FILE
#
# === PATHS ===================================================================
dir:
    data: tests/fixtures/data
    results: tests/tmp/results
    cache: tests/tmp/cache

# === HYPERPARAMETERS =========================================================
# ---+ Model Specification +---------------------------------------------------
# Name of model. Substring before hyphen is model class.
model_name: FCN32ResNet18-test

# Type of model. Can be mlp, scene classifier, segmentation, ssl or siamese.
model_type: segmentation

# ---+ Sizing +----------------------------------------------------------------
batch_size: 8                         # Number of samples in each batch.
patch_size: &patch_size [32, 32]      # 2D tuple or float.
input_size: &input_size [4, 32, 32]   # patch_size plus leading channel dim.
n_classes: &n_classes 8               # Number of classes in dataset.

# ---+ Experiment Execution +--------------------------------------------------
max_epochs: 5                         # Maximum number of training epochs.
pre_train: false                      # Activate pre-training mode.
fine_tune: false                      # Activate fine-tuning mode.
elim: true                            # Eliminates empty classes from schema.
balance: true                         # Balances dataset classes.
torch_compile: true                    # Wrap model in `torch.compile`.

# ---+ Optimisers +---------------------------------------------------
lr: 1.0E-2                            # Learning rate of optimiser.
optim_func: SGD                       # Name of the optimiser function.

# ---+ Model Parameters +------------------------------------------------------
model_params:
    module:
    params:
        input_size: *input_size
        n_classes: *n_classes
        # any other params...

# ---+ Optimiser Parameters +--------------------------------------------------
optim_params:
    params:

# ---+ Scheduler Parameters +--------------------------------------------------
scheduler_params:
    name: LinearLR
    params:
        start_factor: 1.0
        end_factor: 0.5
        total_iters: 5

# ---+ Loss Function Parameters +----------------------------------------------
loss_params:
    name: CrossEntropyLoss           # Name of the loss function to use.
    params:

# ---+ Dataloader Parameters +-------------------------------------------------
loader_params:
    num_workers: 1
    pin_memory: true

# === MODEL IO & LOGGING ======================================================
# ---+ wandb Logging +---------------------------------------------------------
wandb_log: true              # Activates wandb logging.
project: pytest              # Define the project name for wandb.
wandb_dir: /test/tmp/wandb   # Directory to store wandb logs locally.

# ---+ Collator +--------------------------------------------------------------
collator:
    module: torchgeo.datasets
    name: stack_samples

# === TASKS ===================================================================
tasks:
    fit-train:
        type: StandardEpoch
        train: true
        record_float: true

        imagery_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/NAIP.yaml}}'  # yamllint disable-line rule:line-length
        data_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/Chesapeake7.yaml}}'  # yamllint disable-line rule:line-length

        # ---+ Dataset Parameters +----------------------------------------
        dataset_params:
            sampler:
                module: torchgeo.samplers
                name: RandomGeoSampler
                roi: false
                params:
                    size: *patch_size
                    length: 120

            image:
                transforms: false
                images_1:
                    module: minerva.datasets.__testing
                    name: TstImgDataset
                    paths: NAIP
                    params:
                        res: 1.0

                image2:
                    module: minerva.datasets.__testing
                    name: TstImgDataset
                    paths: NAIP
                    params:
                        res: 1.0

            mask:
                transforms: false
                module: minerva.datasets.__testing
                name: TstMaskDataset
                paths: Chesapeake7
                params:
                    res: 1.0

    fit-val:
        type: StandardEpoch
        train: false
        record_float: true

        imagery_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/NAIP.yaml}}'  # yamllint disable-line rule:line-length
        data_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/Chesapeake7.yaml}}'  # yamllint disable-line rule:line-length

        # ---+ Minerva Inbuilt Logging Functions +-------------------------
        # logger: STGLogger
        # metrics: SPMetrics
        # model_io: sup_tg

        # ---+ Dataset Parameters +----------------------------------------
        dataset_params:
            sampler:
                module: torchgeo.samplers
                name: RandomGeoSampler
                roi: false
                params:
                    size: *patch_size
                    length: 32

            image:
                transforms: false
                module: minerva.datasets.__testing
                name: TstImgDataset
                paths: NAIP
                params:
                    res: 1.0

            mask:
                transforms: false
                module: minerva.datasets.__testing
                name: TstMaskDataset
                paths: Chesapeake7
                params:
                    res: 1.0

    test-test:
        type: StandardEpoch
        record_float: true

        imagery_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/NAIP.yaml}}'  # yamllint disable-line rule:line-length
        data_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/Chesapeake7.yaml}}'  # yamllint disable-line rule:line-length

        # ---+ Minerva Inbuilt Logging Functions +-------------------------
        # logger: STGLogger
        # metrics: SPMetrics
        # model_io: sup_tg

        # ---+ Dataset Parameters +----------------------------------------
        dataset_params:
            sampler:
                module: torchgeo.samplers
                name: RandomGeoSampler
                roi: false
                params:
                    size: *patch_size
                    length: 32

            image:
                transforms: false
                module: minerva.datasets.__testing
                name: TstImgDataset
                paths: NAIP
                params:
                    res: 1.0

            mask:
                transforms: false
                module: minerva.datasets.__testing
                name: TstMaskDataset
                paths: Chesapeake7
                params:
                    res: 1.0

# === PLOTTING OPTIONS ========================================================
plots:
    History: true   # Plot of the training and validation metrics over epochs.
    CM: true        # Confusion matrix.
    Pred: true      # Pie chart of the distribution of the predicted classes.
    ROC: true       # Receiver Operator Characteristics for each class.
    micro: true     # Include micro averaging in ROC plot.
    macro: true     # Include macro averaging in ROC plot.
    Mask: true      # Plot predicted masks against ground truth and imagery.

# === MISCELLANEOUS OPTIONS ===================================================
# ---+ Early Stopping +--------------------------------------------------------
stopping:
    patience: 2    # No. of val epochs with increasing loss before stopping.
    verbose: true  # Verbosity of early stopping prints to stdout.

# ---+ Verbosity and Saving +--------------------------------------------------
verbose: true           # Verbosity of Trainer print statements to stdout.
save: true              # Saves created figures to file.
show: false             # Shows created figures in a pop-up window.
p_dist: true            # Shows the distribution of classes to stdout.
plot_last_epoch: true   # Plot the results of the last training and val epochs.

# opt to ask at runtime; auto or True to automatically do so; or False,
# None etc to not
save_model: true

# ---+ Other +-----------------------------------------------------------------
# opt to ask at runtime; auto or True to automatically do so; or False,
# None etc to not
run_tensorboard: false
calc_norm: false
