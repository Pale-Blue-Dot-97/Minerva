---
#       *       *    __  ________   ____________ _    _____
#   *        *      /  |/  /  _/ | / / ____/ __ \ |  / /   |  *           *
#       *          / /|_/ // //  |/ / __/ / /_/ / | / / /| |     *
#   *       *     / /  / // // /|  / /___/ _, _/| |/ / ___ |               *
#    *           /_/  /_/___/_/ |_/_____/_/ |_| |___/_/  |_|     *   *
#
#                     EXAMPLE GeoCLR MASTER CONFIG FILE
#
# === PATHS ===================================================================
data_root: tests/fixtures/data
results_dir: tests/tmp/results
cache_dir: tests/tmp/cache

# === HYPERPARAMETERS =========================================================
# ---+ Model Specification +---------------------------------------------------
# Name of model. Substring before hyphen is model class.
model_name: SimCLR18-test

# Type of model. Can be mlp, scene classifier, segmentation, ssl or siamese.
model_type: siamese

# ---+ Sizing +----------------------------------------------------------------
batch_size: 8                         # Number of samples in each batch.
input_size: [4, 32, 32]               # patch_size plus leading channel dim.
patch_size: '${to_patch_size: ${input_size}}'  # 2D tuple or float.

# ---+ Experiment Execution +--------------------------------------------------
max_epochs: 4                         # Maximum number of training epochs.
elim: false                           # Eliminates empty classes from schema.
balance: false                        # Balances dataset classes.
pre_train: true                       # Activate pre-training mode.
fine_tune: false                      # Activate fine-tuning mode.
torch_compile: true                   # Wrap model in `torch.compile`.
mix_precision: true                   # Activate mixed precision (16-bit)

# ---+ Loss and Optimisers +---------------------------------------------------
loss_func: NTXentLoss                # Name of the loss function to use.
lr: 1.0E-2                           # Learning rate of optimiser.
optim_func: SGD                      # Name of the optimiser function.

# ---+ SSL/ Siamese Options +--------------------------------------------------
sample_pairs: true                   # Activates Siamese paired sampling.
max_r: &max_r 56  # Max distance between patches within a Siamese pair.
knn_k: 5          # Top-k most similar images used to predict image for KNN val
val_freq: 2       # Validation epoch every ``val_freq`` training epochs.

# ---+ Model Parameters +------------------------------------------------------
model_params:
    _target_: minerva.models.SimCLR18
    input_size: ${input_size}
    # any other params...

# ---+ Optimiser Parameters +--------------------------------------------------
optimiser:
    _target_: torch.optim.${optim_func}
    lr: ${lr}

# ---+ Loss Function Parameters +----------------------------------------------
loss_params:
    _target_: lightly.loss.${loss_func}
    temperature: 0.5

# ---+ Dataloader Parameters +-------------------------------------------------
loader_params:
    num_workers: 0
    pin_memory: true

# === WANDB LOGGING ===========================================================
wandb_log: true              # Activates wandb logging.
project: pytest              # Define the project name for wandb.
wandb_dir: /test/tmp/wandb   # Directory to store wandb logs locally.

# === MODEL IO & LOGGING ======================================================
record_int: true    # Store integer results in memory.
record_float: true  # Store floating point results too. Beware memory overload!

# ---+ Collator +--------------------------------------------------------------
collator: torchgeo.datasets.stack_samples

# === TASKS ===================================================================
tasks:
    fit-train:
        _target_: minerva.tasks.StandardEpoch
        train: true
        record_float: true
        sample_pairs: true

        imagery_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/NAIP.yaml}}'  # yamllint disable-line rule:line-length

        # ---+ Minerva Inbuilt Logging Functions +-------------------------
        task_logger: minerva.logger.tasklog.SSLTaskLogger
        step_logger:
            _target_: minerva.logger.steplog.SSLStepLogger
        model_io: minerva.modelio.ssl_pair_torchgeo_io

        # ---+ Dataset Parameters +----------------------------------------
        dataset_params:
            sampler:
                _target_: minerva.samplers.RandomPairGeoSampler
                roi: false
                size: ${patch_size}
                length: 32
                max_r: *max_r

            image:
                transforms:
                    normalise:
                        _target_: minerva.transforms.Normalise
                        norm_value: 255
                    RandomApply:
                        p: 0.25
                        jitter:
                            _target_: minerva.transforms.DetachedColorJitter
                            brightness: 0.2
                            contrast: 0.1
                            saturation: 0.1
                            hue: 0.15
                    resize_crop:
                        _target_: kornia.augmentation.RandomResizedCrop
                        p: 0.2
                        size: ${patch_size}
                        cropping_mode: resample
                        keepdim: true
                    horizontal_flip:
                        _target_: kornia.augmentation.RandomHorizontalFlip
                        p: 0.2
                        keepdim: true
                    gaussian_blur:
                        _target_: kornia.augmentation.RandomGaussianBlur
                        kernel_size: 9
                        p: 0.2
                        sigma: [0.01, 0.2]
                        keepdim: true
                    gaussian_noise:
                        _target_: kornia.augmentation.RandomGaussianNoise
                        p: 0.2
                        std: 0.05
                        keepdim: true
                    random_erasing:
                        _target_: kornia.augmentation.RandomErasing
                        p: 0.2
                        keepdim: true
                subdatasets:
                    image1:
                        _target_: minerva.datasets.__testing.TstImgDataset
                        paths: NAIP
                        res: 1.0
                    image2:
                        _target_: minerva.datasets.__testing.TstImgDataset
                        paths: NAIP
                        res: 1.0

    fit-val:
        _target_: minerva.tasks.WeightedKNN
        train: false
        sample_pairs: false
        n_classes: 8

        imagery_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/NAIP.yaml}}'  # yamllint disable-line rule:line-length
        data_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/Chesapeake7.yaml}}'  # yamllint disable-line rule:line-length

        # ---+ Minerva Inbuilt Logging Functions +-------------------------
        task_logger: minerva.logger.tasklog.SSLTaskLogger
        step_logger:
            _target_: minerva.logger.steplog.KNNStepLogger
        model_io: minerva.modelio.ssl_pair_torchgeo_io

        # ---+ Dataset Parameters +----------------------------------------
        dataset_params:
            features:
                sampler:
                    _target_: torchgeo.samplers.RandomGeoSampler
                    roi: false
                    size: ${patch_size}
                    length: 32

                image:
                    _target_: minerva.datasets.__testing.TstImgDataset
                    paths: NAIP
                    res: 1.0

                mask:
                    _target_: minerva.datasets.__testing.TstMaskDataset
                    paths: Chesapeake7
                    res: 1.0

            test:
                sampler:
                    _target_: torchgeo.samplers.RandomGeoSampler
                    roi: false
                    size: ${patch_size}
                    length: 32

                image:
                    _target_: minerva.datasets.__testing.TstImgDataset
                    paths: NAIP
                    res: 1.0

                mask:
                    _target_: minerva.datasets.__testing.TstMaskDataset
                    paths: Chesapeake7
                    res: 1.0

    test-test:
        _target_: minerva.tasks.StandardEpoch
        train: false
        record_float: true
        sample_pairs: false
        n_classes: 8

        imagery_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/NAIP.yaml}}'  # yamllint disable-line rule:line-length
        data_config: '${oc.create:${cfg_load: minerva/inbuilt_cfgs/dataset/Chesapeake7.yaml}}'  # yamllint disable-line rule:line-length

        # ---+ Minerva Inbuilt Logging Functions +-------------------------
        task_logger: minerva.logger.tasklog.SupervisedTaskLogger
        model_io: minerva.modelio.supervised_torchgeo_io

        # ---+ Dataset Parameters +----------------------------------------
        dataset_params:
            sampler:
                _target_: torchgeo.samplers.RandomGeoSampler
                roi: false
                size: ${patch_size}
                length: 32

            image:
                _target_: minerva.datasets.__testing.TstImgDataset
                paths: NAIP
                res: 1.0

            mask:
                _target_: minerva.datasets.__testing.TstMaskDataset
                paths: Chesapeake7
                res: 1.0

# === PLOTTING OPTIONS ========================================================
plots:
    History: true   # Plot of the training and validation metrics over epochs.
    CM: false       # Confusion matrix.
    Pred: false     # Pie chart of the distribution of the predicted classes.
    ROC: false      # Receiver Operator Characteristics for each class.
    micro: false    # Include micro averaging in ROC plot.
    macro: false    # Include macro averaging in ROC plot.
    Mask: false     # Plot predicted masks against ground truth and imagery.

# === MISCELLANEOUS OPTIONS ===================================================
# ---+ Early Stopping +--------------------------------------------------------
stopping:
    patience: 2    # No. of val epochs with increasing loss before stopping.
    verbose: true  # Verbosity of early stopping prints to stdout.

# ---+ Verbosity and Saving +--------------------------------------------------
verbose: true           # Verbosity of Trainer print statements to stdout.
save: true              # Saves created figures to file.
show: false             # Shows created figures in a pop-up window.
p_dist: true            # Shows the distribution of classes to stdout.
plot_last_epoch: true   # Plot the results of the last training and val epochs.

# opt to ask at runtime; auto or True to automatically do so; or False,
# None etc to not
save_model: false

# ---+ Other +-----------------------------------------------------------------
# opt to ask at runtime; auto or True to automatically do so; or False,
# None etc to not
run_tensorboard: false
calc_norm: false
cache_dataset: false  # Cache the dataset objects to speed up dataset init.
