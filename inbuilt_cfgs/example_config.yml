---
# EXAMPLE MASTER CONFIG FILE

# === PATHS ===================================================================
dir:
    data: tests/tmp/data
    configs:
        data_config: Chesapeake7.yml
        imagery_config: NAIP.yml
    results: tests/tmp/results
    cache: tests/tmp/cache

# ---+ Kwargs for make_datasets +----------------------------------------------
# Name of model. Substring before hyphen is model class.
model_name: FCN32ResNet18-MkI

# Type of model. Can be mlp, scene_classifier, segmentation.
model_type: segmentation

sample_pairs: false
elim: true
balance: true
patch_size: &patch_size [32, 32]
pre_train: false
fine_tune: false
max_r: 52

# === MODEL IO & LOGGING ======================================================
logger: STG_Logger
metrics: SP_Metrics
model_io: sup_tg

# === DATASET PARAMETERS ======================================================
dataset_params:
    # Training Dataset
    train:
        image:
            module: minerva.datasets
            name: TstImgDataset
            root: test_images
            params:
                res: 1.0

        mask:
            module: minerva.datasets
            name: TstMaskDataset
            root: test_lc
            params:
                res: 1.0

    # Validation Dataset
    val:
        image:
            module: minerva.datasets
            name: TstImgDataset
            root: test_images
            params:
                res: 1.0

        mask:
            module: minerva.datasets
            name: TstMaskDataset
            root: test_lc
            params:
                res: 1.0

    # Test Dataset
    test:
        image:
            module: minerva.datasets
            name: TstImgDataset
            root: test_images
            params:
                res: 1.0

        mask:
            module: minerva.datasets
            name: TstMaskDataset
            root: test_lc
            params:
                res: 1.0

# === SAMPLER PARAMETERS ======================================================
sampler_params:
    # Training Dataset Sampler
    train:
        module: torchgeo.samplers
        name: RandomGeoSampler
        roi: false
        params:
            size: *patch_size
            length: 120

    # Validation Dataset Sampler
    val:
        module: torchgeo.samplers
        name: RandomGeoSampler
        roi: false
        params:
            size: *patch_size
            length: 32

    # Test Dataset Sampler
    test:
        module: torchgeo.samplers
        name: RandomGeoSampler
        roi: false
        params:
            size: *patch_size
            length: 32


# === TRANSFORM PARAMETERS ====================================================
transform_params:
    # Training Dataset Transforms
    train:
        image: false
        mask: false

    # Validation Dataset Transforms
    val:
        image: false
        mask: false

    # Test Dataset Transforms
    test:
        image: false
        mask: false

# Collation
collator:
    module: torchgeo.datasets
    name: stack_samples

# Model hyper-parameters
hyperparams:
    params:
        batch_size: 8
        num_workers: 1
        pin_memory: true
    model_params:
        input_size: [4, 32, 32]
        n_classes: 8
    optim_params:
        name: SGD
        params:
            lr: 1.0E-2
    loss_params:
        name: CrossEntropyLoss
        params:

    max_epochs: 5
    stopping:
        patience: 2
        verbose: true

# Which plots to make
plots:
    History: true
    CM: true
    Pred: true
    ROC: true
    micro: true
    macro: true
    Mask: true

# opt to ask at runtime;
# auto or True to automatically do so;
# or False, None etc to not
save_model: true
run_tensorboard: false
save: true
show: false
p_dist: true
calc_norm: false
plot_last_epoch: true
record_float: true
