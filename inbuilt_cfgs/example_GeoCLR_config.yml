---
# EXAMPLE GeoCLR MASTER CONFIG FILE

# === PATHS ===================================================================
dir:
    data: tests/tmp/data
    configs:
        imagery_config: NAIP.yml
        data_config: Chesapeake7.yml
    results: tests/tmp/results
    cache: tests/tmp/cache

# ---+ Kwargs for make_datasets +----------------------------------------------
# Name of model. Substring before hyphen is model class.
model_name: SimCLR18-test

# Type of model. Can be mlp, scene_classifier, segmentation.
model_type: siamese

sample_pairs: true
elim: false
balance: false
patch_size: &patch_size [32, 32]
pre_train: true
fine_tune: false
max_r: &max_r 56
knn_k: 5
val_freq: 2

# === MODEL IO & LOGGING ======================================================
logger: SSLLogger
metrics: SSLMetrics
model_io: ssl_pair_tg

# === DATASET PARAMETERS ======================================================
dataset_params:
    # Training Dataset
    train:
        image:
            module: minerva.datasets
            name: TstImgDataset
            root: test_images
            params:
                res: 1.0

    # Validation Dataset
    val:
        image:
            module: minerva.datasets
            name: TstImgDataset
            root: test_images
            params:
                res: 1.0

        mask:
            module: minerva.datasets
            name: TstMaskDataset
            root: test_lc
            params:
                res: 1.0

    # Test Dataset
    test:
        image:
            module: minerva.datasets
            name: TstImgDataset
            root: test_images
            params:
                res: 1.0

        mask:
            module: minerva.datasets
            name: TstMaskDataset
            root: test_lc
            params:
                res: 1.0

# === SAMPLER PARAMETERS ======================================================
sampler_params:
    # Training Dataset Sampler
    train:
        module: minerva.samplers
        name: RandomPairGeoSampler
        roi: false
        params:
            size: *patch_size
            length: 120
            max_r: *max_r

    # Validation Dataset Sampler
    val:
        module: torchgeo.samplers
        name: RandomGeoSampler
        roi: false
        params:
            size: *patch_size
            length: 32

    # Test Dataset Sampler
    test:
        module: torchgeo.samplers
        name: RandomGeoSampler
        roi: false
        params:
            size: *patch_size
            length: 32

# === TRANSFORM PARAMETERS ====================================================
transform_params:
    # Training Dataset Transforms
    train:
        image:
            Normalise:
                module: minerva.transforms
                norm_value: 255
            RandomApply:
                p: 0.25
                RandomResizedCrop:
                    module: torchvision.transforms
                    size: *patch_size
            DetachedColorJitter:
                module: minerva.transforms
                brightness: 0.8
                contrast: 0.8
                saturation: 0.8
                hue: 0.2
            RandomHorizontalFlip:
                module: torchvision.transforms
            RandomVerticalFlip:
                module: torchvision.transforms
            GaussianBlur:
                module: torchvision.transforms
                kernel_size: 25

    # Validation Dataset Transforms
    val:
        image: false
        mask: false

    test:
        image: false
        mask: false

# Collation
collator:
    module: torchgeo.datasets
    name: stack_samples

# Model hyper-parameters
hyperparams:
    params:
        batch_size: 8
        num_workers: 1
        pin_memory: true
    model_params:
        input_size: [4, 32, 32]
    optim_params:
        name: SGD
        params:
            lr: 1.0E-2
    loss_params:
        name: NTXentLoss
        module: lightly.loss
        params:
            temperature: 0.5

    max_epochs: 4
    stopping:
        patience: 2
        verbose: true

# Which plots to make
plots:
    History: true
    CM: false
    Pred: false
    ROC: false
    micro: false
    macro: false
    Mask: false

# opt to ask at runtime;
# auto or True to automatically do so;
# or False, None etc to not
save_model: false
run_tensorboard: false
save: true
show: false
p_dist: false
calc_norm: false
plot_last_epoch: true
record_float: false
